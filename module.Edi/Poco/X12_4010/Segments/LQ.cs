using Edi.Domain.Shared.Enums;
using indice.Edi.Serialization;
using Scm.Edi.Domain.Shared.Attributes;

namespace Edi.Application.Contracts.Poco.X12_4010.Segments
{
    [EdiSegment]
    [EdiPath("LQ")]
    public class LQ
    {
        [EdiValue("X(3)", Path = "LQ/0", Description = "LQ01 - Code List Qualifier Code")]
        [EdiExtension(MinLength = 1, MaxLength = 3, Mandatory = false, EdiType = EdiType.Identifier)]
        [EdiAllowValue(AllowedValues = new string[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "10", "11", "12", "13", "14", "16", "17", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "66", "67", "69", "71", "74", "75", "78", "79", "80", "81", "82", "83", "84", "85", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "AA", "AB", "AC", "AD", "AE", "AF", "AG", "AH", "AI", "AJ", "AK", "AL", "AM", "AN", "AO", "AP", "AQ", "AR", "AS", "AT", "AU", "AW", "AX", "BA", "BB", "BC", "BD", "BE", "BF", "BG", "BH", "BI", "BJ", "BK", "BL", "BM", "BN", "BO", "BP", "BQ", "BR", "BS", "BU", "BV", "BY", "BZ", "C1", "C2", "C3", "CA", "CB", "CC", "CD", "CE", "CF", "CG", "CH", "CI", "CJ", "CK", "CL", "CM", "CN", "CO", "CS", "CT", "CU", "CV", "CW", "CZ", "D1", "D2", "D3", "D4", "D5", "DA", "DB", "DC", "DD", "DE", "DF", "DG", "DH", "DI", "DJ", "DK", "DL", "DM", "DN", "DO", "DQ", "DR", "DS", "DT", "DU", "DW", "DX", "DY", "DZ", "EA", "EB", "EC", "ED", "EE", "EF", "EG", "EH", "EI", "EJ", "EK", "EL", "EM", "EN", "EO", "EQ", "ER", "ES", "ET", "EU", "EV", "EW", "EX", "EY", "EZ", "FA", "FB", "FC", "FD", "FE", "FF", "FG", "FH", "FI", "FJ", "FK", "FL", "FM", "FN", "FO", "FP", "FQ", "FR", "FS", "FT", "FU", "FV", "FW", "FX", "FZ", "G1", "GA", "GB", "GC", "GD", "GE", "GF", "GG", "GI", "GJ", "GK", "GQ", "GR", "GS", "GT", "GU", "GV", "GW", "HA", "HB", "HD", "HE", "HI", "HS", "IC", "ID", "IF", "IQ", "IT", "J0", "J1", "J2", "J3", "J4", "J5", "J6", "J7", "J8", "J9", "JA", "JB", "JC", "JD", "JE", "JF", "JG", "JH", "JI", "JK", "JL", "JM", "JN", "JO", "JP", "KA", "KB", "KC", "KD", "KE", "KF", "KG", "KH", "KI", "KJ", "KK", "KL", "KM", "KO", "KP", "KQ", "KS", "KT", "KU", "KW", "KZ", "LA", "LB", "LC", "LD", "LE", "LF", "LG", "LH", "LJ", "LK", "LM", "LN", "LO", "LP", "LQ", "LR", "LS", "LT", "LZ", "MB", "MC", "ME", "MI", "MJ", "MK", "ML", "MN", "NA", "NB", "NC", "ND", "NE", "NF", "NH", "NI", "NJ", "NK", "NL", "NP", "NR", "NS", "NT", "O1", "O2", "O3", "O4", "OC", "PB", "PC", "PD", "PI", "PL", "PS", "QA", "QB", "QC", "QE", "QF", "QG", "QH", "QI", "QJ", "QK", "QS", "RA", "RC", "RD", "RE", "RF", "RI", "RQ", "RR", "RT", "RX", "SA", "SB", "SC", "SD", "SE", "SF", "SG", "SH", "SI", "SJ", "SL", "SM", "SO", "SP", "SR", "SS", "ST", "TB", "TC", "TD", "TE", "TF", "TG", "TR", "TX", "TY", "UP", "UR", "US", "UU", "ZZ", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "AAA", "ABR", "ABS", "ALP", "APE", "BCC", "BCR", "BPL", "BRL", "BSL", "CLP", "CML", "COG", "CPS", "CRC", "CSF", "DBS", "DGO", "DLO", "DLP", "DPE", "DPL", "ESL", "ETL", "EWC", "EWR", "HRC", "HZR", "IMC", "IMP", "IPA", "JCL", "JOL", "KYL", "LIN", "LOI", "LSC", "MCC", "MCD", "MOC", "NAC", "NAF", "NAS", "NDC", "PGS", "PIT", "PLC", "PLS", "PPD", "PPP", "PPS", "PPV", "PRA", "PRC", "PRR", "PRT", "PWA", "PWI", "PWR", "PWS", "PWT", "RCA", "REN", "RTC", "RUM", "SBA", "SEC", "SHL", "SMI", "SPE", "SRL", "STC", "T00", "T01", "T02", "T03", "T04", "T05", "T06", "T07", "T08", "T09", "T10", "T11", "T12", "T13", "T14", "T15", "T16", "T17", "T18", "T19", "T20", "T21", "TCL", "TOL", "TTL", "WDL" })]
        public string CodeListQualifierCode { get; set; }

        [EdiValue("X(30)", Path = "LQ/1", Description = "LQ02 - Industry Code")]
        [EdiExtension(MinLength = 1, MaxLength = 30, Mandatory = false, EdiType = EdiType.Alphanumeric)]
        public string IndustryCode { get; set; }
    }
}
